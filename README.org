* Operating System Evaluator

Clone with ~--recursive~. Install [[https://git-lfs.com/][Git LFS]] for ~bench/data-archives~ and prebuilt plots.

** Features

... or, /why not to just write a custom script/.

- Different programming languages for plotting.
- Flexible benchmarks (microbenchmarks, real-world client/server benchmarks).
- Flexible system under test (e.g., VM or physical machine), compare different SuTs.
- Fully automatic setup of the SuT with the software to evaluate (boot kernel, ...).
- Plot available benchmark results while the benchmark is still running.
- ETA for long benchmark runs.
- Parallel plotting.
- Separate running benchmarks and processing (e.g., plotting) their results.
- Analyse [[https://vita.had.co.nz/papers/tidy-data.pdf][tidy]] data but still collect a lot of (dirty) data during the benchmark, decide later what to actually process.
- Randomize benchmark execution order to avoid false conclusions and encourage reproducibility.
- Archive/share large raw benchmark results and prebuilt plots with Git LFS to avoid exceeding Git limits.

** Quick Start

Install all dependencies, see ~make install-deps~ in the subdirectories.

Boot the VM (system under test):

#+BEGIN_SRC sh
make -C system qemu
#+END_SRC

This might take some time the first time as it builds the kernel and installs
Debian. Alternatively boot the physical target machine (with any kernel) for the
non-demo benchmark suites.

In another terminal on the control system (connects to the SuTs, can be the same as the development system):

#+BEGIN_SRC sh
./bench/run.sh --suite idle
#+END_SRC

The latter also installs and sets up all benchmark dependencies (e.g., boot the kernel) on the target SuT.

Plot and open the results on the development system:

#+BEGIN_SRC sh
make -C eval -k -j $(getconf _NPROCESSORS_ONLN) all
open eval/plots/*-idle.pdf
#+END_SRC

** Data Flow

#+BEGIN_SRC
system/{linux, *}
  -- make -C system --> System under Test (Target)
  -- ./bench/run.sh --> bench/.data/*/
  -- ./eval/tidy.py --> eval/.tidy/*.tsv.gz
  -- ./eval/plot-*  --> eval/plots/**.pdf
#+END_SRC

This does not mean that the above commands should be called directly.

* License

#+BEGIN_SRC
SPDX-License-Identifier: GPL-2.0+
#+END_SRC

This is the default for this repo and all submodules unless explicitly set to something else (e.g., in external submodules).
