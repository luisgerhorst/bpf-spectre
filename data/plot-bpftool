#!/usr/bin/Rscript

source("plotlib.R")

print(DATA)

REAL_DATA <- DATA %>%
  filter(!str_detect(OSE_BPF_OBJ, "^*custom_*"))
INSN_DATA <- REAL_DATA %>%
  filter(bpftool_loadall_exitcode == 0)

ggplot(DATA, aes(paste(kernel_bpf_spec_v1, kernel_bpf_spec_v4, OSE_BPF_OBJ),
                 fill=paste(`BPF Loadable`, bpftool_loadall_error),
                 colour=paste(bpftool_loadall_type, verification_error))) +
  geom_histogram(stat = "count") +
  theme(axis.text.x = element_text(angle = 45, hjust=1)) +
  scale_fill_viridis_d() +
  facet_grid(cols=vars(Project), rows=vars(`BPF Program Type`), scales="free")
eval_save("full-overview")

ed <- DATA %>%
  filter(User == "Privileged", !str_detect(OSE_BPF_OBJ, "^*custom_*"))
expr <- ed %>%
  group_by(OSE_BPF_OBJ, .drop=F) %>%
  summarize(ble_max = max(bpftool_loadall_exitcode), ble_min = min(bpftool_loadall_exitcode)) %>%
  ungroup()
expr <- ed %>%
  right_join(expr) %>%
  distinct(OSE_BPF_OBJ, OSE_SYSCTL, OSE_CAPSH_ARGS, .keep_all=TRUE)

ggplot(expr, aes(paste(kernel_bpf_spec_v1, kernel_bpf_spec_v4),
                 colour=paste(`BPF Loadable`, bpftool_loadall_error),
                 fill=paste(bpftool_loadall_type, verification_error, str_trunc(bpftool_loadall_error_reason, 64)))) +
  geom_histogram(stat = "count") +
  theme(axis.text.x = element_text(angle = 45, hjust=1)) +
  scale_fill_viridis_d() +
  facet_grid(cols=vars(Project), rows=vars(`BPF Program Type`), scales="free")
eval_save("overview")

expr <- expr %>% filter(ble_min == 0)

ggplot(expr, aes(verification_time_usec, colour=Project)) +
  stat_ecdf() +
  theme(axis.text.x = element_text(angle = 45, hjust=1)) +
  facet_grid(cols=vars(`BPF Program Type`), scales="free")
eval_save("x")

ggplot(expr, aes(verification_error_msg)) +
  geom_histogram(stat = "count") +
  theme(axis.text.x = element_text(angle = 45, hjust=1))
eval_save("x")

e <- DATA %>%
  distinct(uname_a, OSE_BPF_OBJ, User, OSE_SYSCTL, .keep_all=TRUE)
ggplot(e, aes(paste(LINUX_GIT_CHECKOUT, User, paste(kernel_bpf_spec_v1, kernel_bpf_spec_v4), sep=", "),
              colour=paste(bpftool_loadall_exitcode, bpftool_loadall_error, sep=", "),
              fill=verification_error)) +
  scale_fill_viridis_d() +
  geom_histogram(stat = "count", position="stack") +
  theme(axis.text.x = element_text(angle = 45, hjust=1))
eval_save("errors")

w <- expr %>%
  filter(bpftool_loadall_exitcode > 0, is.na(bpftool_loadall_error))
ggplot(w, aes(OSE_BPF_OBJ, fill=paste(kernel_bpf_spec_v1, kernel_bpf_spec_v4))) +
  geom_histogram(stat = "count", position="stack") +
  theme(axis.text.x = element_text(angle = 45, hjust=1))
eval_save("NA-errors")

d <- INSN_DATA
s <- d %>%
  group_by(OSE_BPF_OBJ, bpftool_prog, .drop=F) %>%
  summarize(
    bjit_max = max(bpftool_jited_insncnt_total),
    bjit_min = min(bpftool_jited_insncnt_total),
    bjil_max = max(bpftool_jited_insncnt_lfence),
    bjil_min = min(bpftool_jited_insncnt_lfence)
  ) %>%
  ungroup()
d <- d %>%
  left_join(s) %>%
  distinct(uname_a, OSE_BPF_OBJ, bpftool_prog, User, OSE_SYSCTL, .keep_all=TRUE)

ggplot(INSN_DATA, aes(bpftool_jited_insncnt_total, colour=paste(kernel_bpf_spec_v1, kernel_bpf_spec_v4))) +
  stat_ecdf() +
  scale_x_log10()
eval_save("total")

ggplot(INSN_DATA, aes(bpftool_jited_insncnt_lfence, colour=paste(kernel_bpf_spec_v1, kernel_bpf_spec_v4))) +
  stat_ecdf() +
  scale_x_log10()
eval_save("lfence")

ggplot(d, aes(`lfence / Total Instructions [%]`, linetype=paste0(kernel_bpf_spec_v4), colour=paste0(kernel_bpf_spec_v1))) +
  stat_ecdf() +
  facet_grid(rows=vars(Project, `BPF Program Type`),
             cols=vars(uname_a),
             labeller=label_both, scales="free")
eval_save("lfence-percent-fgbs")

ggplot(d, aes(`lfence / Total Instructions [%]`, linetype=paste0(kernel_bpf_spec_v4), colour=paste0(kernel_bpf_spec_v1))) +
  stat_ecdf() +
  facet_grid(rows=vars(T),
             cols=vars(uname_a),
             labeller=label_both, scales="free")
eval_save("lfence-percent-fgbs")

md <- DATA %>%
  filter(bpftool_loadall_exitcode == 0) %>%
  ## filter(net_core_bpf_jit_harden == "0", kernel_bpf_spec_v4 == "0", User == "Privileged") %>%
  group_by(OSE_BPF_OBJ, bpftool_prog, .drop=F) %>%
  summarize(
    bjit_max = max(bpftool_jited_insncnt_total), bjit_min = min(bpftool_jited_insncnt_total),
    bjil_max = max(bpftool_jited_insncnt_lfence), bjil_min = min(bpftool_jited_insncnt_lfence)
  ) %>%
  ungroup() ## %>% filter(bjit_max > 1.05 * bjit_min)
md <- DATA %>%
  filter(bpftool_loadall_exitcode == 0) %>%
  filter(net_core_bpf_jit_harden == "0", kernel_bpf_spec_v4 == "0", User == "Privileged") %>%
  inner_join(md)
print(md)
cns <- colnames(DATA)
metrics <- cns[startsWith(cns, "bpftool_jited_insncnt_lfence") |
               startsWith(cns, "bpftool_jited_insncnt_total")]
for (m in metrics) {
  ggplot(md, aes(x=paste(OSE_BPF_OBJ, " ", bpftool_prog, "()", sep=""), y=get(m), colour=paste(OSE_CAPSH_ARGS, paste(kernel_bpf_spec_v1, kernel_bpf_spec_v4)))) +
    geom_boxplot(position = "dodge") +
    theme(axis.text.x = element_text(angle = 45, hjust=1)) +
    facet_grid(rows=vars(T, bpftool_loadall_exitcode),
               cols=vars(OSE_CPUFREQ, bench_script),
               labeller=label_both, scales="free")
  eval_save(paste0(m, "-dodge1"))
}


## DATA <- DATA %>%
##   filter(net_core_bpf_jit_harden == "0", kernel_bpf_spec_v1 == "0", User == "Privileged")

md <- DATA %>%
  group_by(OSE_BPF_OBJ, bpftool_prog, .drop=F) %>%
  summarize(
    bjit_max = max(bpftool_jited_insncnt_total), bjit_min = min(bpftool_jited_insncnt_total),
    bjil_max = max(bpftool_jited_insncnt_lfence), bjil_min = min(bpftool_jited_insncnt_lfence)
  ) %>%
  ungroup() %>%
  filter(bjit_max > 1.05 * bjit_min)
md <- DATA %>% inner_join(md)

cns <- colnames(DATA)
metrics <- cns[startsWith(cns, "bpftool_jited_insncnt_lfence") |
               startsWith(cns, "bpftool_jited_insncnt_total")]
for (m in metrics) {
  ggplot(md, aes(x=paste(OSE_BPF_OBJ, " ", bpftool_prog, "()", sep=""), y=get(m),
                 colour=paste(OSE_CAPSH_ARGS, paste(kernel_bpf_spec_v1, kernel_bpf_spec_v4)))) +
    geom_boxplot(position = "dodge") +
    theme(axis.text.x = element_text(angle = 45, hjust=1)) +
    facet_grid(rows=vars(T, bpftool_loadall_exitcode),
               cols=vars(OSE_CPUFREQ, bench_script),
               labeller=label_both, scales="free")
  eval_save(paste0(m, "-boxplot2"))
}

ggplot(md, aes(x=paste(OSE_BPF_OBJ, " ", bpftool_prog, "()", sep=""), y=bpftool_run_duration_ns, colour=paste(kernel_bpf_spec_v1, kernel_bpf_spec_v4))) +
  geom_boxplot() +
  labs(y = "Execution Time [ns]") +
  scale_y_continuous(limits = c(0, NA)) +
  theme(axis.text.x = element_text(angle = 45, hjust=1)) +
  scale_colour_viridis_d()
eval_save("executiontime")
