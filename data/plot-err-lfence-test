#!/usr/bin/Rscript

source("plotlib.R")

print(DATA)

e <- DATA %>%
  distinct(uname_a, BPF_OBJ, User, SYSCTL, .keep_all=TRUE)
ggplot(e, aes(paste(LINUX_GIT_CHECKOUT, User, SYSCTL, sep=", "),
              colour=paste(bpftool_loadall_exitcode, bpftool_loadall_error, sep=", "),
              fill=verification_error)) +
  scale_fill_viridis_d() +
  geom_histogram(stat = "count", position="stack") +
  theme(axis.text.x = element_text(angle = 45, hjust=1))
eval_save("errors")

## ---

b1 <- "bpf-spectre-v1-lfence"
b2 <- "bsel-refactor"
d <- DATA # %>% select(-burst_pos)
d1 <- d %>% filter(LINUX_GIT_CHECKOUT == b1)
d2 <- d %>% filter(LINUX_GIT_CHECKOUT == b2)
d <- d1 %>%
  inner_join(d2, by=c("BPF_OBJ", "User", "SYSCTL"),
             suffix=c("", ".other")) %>%
  filter(bpftool_loadall_error != bpftool_loadall_error.other ||
         verification_error == verification_error.other) %>%
  distinct(BPF_OBJ, User, SYSCTL, .keep_all=TRUE)
## %>%
##   filter(bpftool_loadall_exitcode == bpftool_loadall_exitcode.x,
##          bpftool_loadall_error == bpftool_loadall_error.x)

summarize(d)
print(d)

ggplot(d, aes(paste(User, SYSCTL, sep=", "),
              colour=paste(bpftool_loadall_exitcode, bpftool_loadall_error, sep=", "),
              fill=verification_error)) +
  scale_fill_viridis_d() +
  geom_histogram(stat = "count", position="stack") +
  theme(axis.text.x = element_text(angle = 45, hjust=1))
eval_save("errors")
