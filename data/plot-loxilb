#!/usr/bin/Rscript

source("plotlib.R")

DATA <- DATA %>%
  ## mutate(bpftool_prog_show_run_time_avg_ns = bpftool_prog_show_run_time_ns / bpftool_prog_show_run_cnt) %>%
  filter(workload_exitcode == "0") %>%
  group_by(uname_a, T, OSE_SYSCTL) %>%
  mutate(across(where(is.numeric), ~ .x / min(.x, na.rm = TRUE), .names = "norm_{.col}"),
         across(where(is.numeric), ~ min(.x, na.rm = TRUE), .names = "min_{.col}"),
         across(where(is.numeric), ~ max(.x, na.rm = TRUE), .names = "max_{.col}")) %>%
  ungroup() %>%
  group_by(uname_a, T, OSE_SYSCTL) %>%
  mutate(across(where(is.numeric), ~ mean(.x, na.rm = TRUE), .names = "mean_{.col}")) %>%
  ungroup() ## %>%
  ## filter(max_bpftool_jited_insncnt_lfence > 0,
  ##        min_bpftool_prog_show_run_cnt > 1*1000)

cns <- colnames(DATA)
perf_metrics <- cns[
  startsWith(cns, "perf_cycles")
  | startsWith(cns, "perf_task_clock")
  | startsWith(cns, "perf_duration")
  | startsWith(cns, "bpftool_prog_show_run_time_")
  | cns == "throughput"
]

for (m in perf_metrics) {
  for (lv in unique(DATA$OSE_LOXILB_VALIDATION)) {
    if (startsWith(m, "iperf") && startsWith(lv, "netperf") ||
        startsWith(m, "iperf_") && startsWith(lv, "iperf3") ||
        startsWith(m, "iperf3_") && lv == "iperf3" ||
        startsWith(m, "netperf") && startsWith(lv, "iperf")) {
      next
    }
    print(paste(lv, m))
    ggplot(DATA %>% filter(OSE_LOXILB_VALIDATION == lv),
           aes(x=get(m),
               linetype=paste0(kernel_bpf_spec_v4 == 2),
               colour=paste0(kernel_bpf_spec_v1 == 2))) +
      stat_ecdf() +
      scale_colour_viridis_d(begin = 0.2, end = 0.8) +
      facet_grid(cols=vars(OSE_LOXILB_VALIDATION, OSE_LOXILB_CLIENTS, OSE_NETPERF_TEST),
                 rows=vars(hostname_short, uname_a),
                 labeller=label_value, scales="free")
    eval_save(paste(m, lv))
  }
}
