#!/bin/bash
set -euo pipefail
bash -n "$(command -v "$0")"
set -x

LINUX=$1
TARGET=$2
DST=$3

MAKE=${MAKE:-make -j `getconf _NPROCESSORS_ONLN`}

# Determine the kernel release and build version our package will have.
env - PATH=${PATH} ${MAKE} -C ${LINUX} include/config/kernel.release
KERNEL_RELEASE=`cat ${LINUX}/include/config/kernel.release`

# if [ -f ${LINUX}/.version ]
# then
#     KBUILD_BUILD_VERSION_OLD=`cat ${LINUX}/.version`
# else
#     KBUILD_BUILD_VERSION_OLD=1
# fi

# Compress with xz even on Ubuntu to avoid
# https://github.com/yktoo/indicator-sound-switcher/issues/113
env - CCACHE_DIR=${CCACHE_DIR} PATH=${PATH} \
	KDEB_COMPRESS=xz \
	${MAKE} -C ${LINUX} ${TARGET}
ccache -s

if [[ "${TARGET}" != "bindeb-pkg" ]]
then
    exit 0
fi

# if [ -f ${LINUX}/.version ]
# then
#     KBUILD_BUILD_VERSION=`cat ${LINUX}/.version`
# else
#     KBUILD_BUILD_VERSION=1
# fi

TMP=$(mktemp -d $USER-$(basename $0))/

ls -al > "${TMP}kernel.filenames"
mv linux-*_${KERNEL_RELEASE}-*_amd64.buildinfo "${TMP}linux_amd64.buildinfo"
mv linux-*_${KERNEL_RELEASE}-*_amd64.changes "${TMP}linux_amd64.changes"
mv linux-headers-${KERNEL_RELEASE}_${KERNEL_RELEASE}-*_amd64.deb "${TMP}linux-headers_amd64.deb"
mv linux-image-${KERNEL_RELEASE}_${KERNEL_RELEASE}-*_amd64.deb "${TMP}linux-image_amd64.deb"
set +e
mv linux-image-${KERNEL_RELEASE}-dbg_${KERNEL_RELEASE}-*_amd64.deb "${TMP}linux-image-dbg_amd64.deb"
set -e
mv linux-libc-dev_${KERNEL_RELEASE}-*_amd64.deb "${TMP}linux-libc-dev_amd64.deb"
echo ${KERNEL_RELEASE} > "${TMP}kernel.release"

rm -rfd "${DST}"
mv -f $TMP "$DST"
