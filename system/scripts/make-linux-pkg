#!/bin/bash
set -euo pipefail
bash -n "$(command -v "$0")"
set -x

LINUX=$1
TARGET=$2
DST=$3

if [[ "${TARGET}" != *deb-pkg ]]
then
    exit 1
fi

# Do this here and not in system/Makefile because system/Makefile may change linux/.config.
CONFIG=$LINUX/.config
KERNEL_COMMIT=$(env -C ${LINUX} git rev-parse --short HEAD)
KERNEL_STATUS_MD5SUM=$(env -C $LINUX git status -vv | awk '$1 != "index" { print }' | md5sum | cut -c -6)
KERNEL_CONFIG_MD5SUM=$(md5sum $CONFIG | cut -c -6)
LOCALVERSION=-$USER+$KERNEL_COMMIT+$KERNEL_STATUS_MD5SUM+$KERNEL_CONFIG_MD5SUM

MAKE=${MAKE:-make -j `getconf _NPROCESSORS_ONLN`}
MAKE="$MAKE LOCALVERSION=$LOCALVERSION"

# Determine the kernel release our package will have.
env - PATH=${PATH} KDEB_COMPRESS=xz \
    ${MAKE} -C ${LINUX} include/config/kernel.release
KERNEL_RELEASE=`cat ${LINUX}/include/config/kernel.release`

mkdir -p .build/linux-deb-cache/
cached=.build/linux-deb-cache/$KERNEL_RELEASE
if [ -d $cached ]
then
   rm -rfd "${DST}"
   cp -rfd $cached $DST
   exit 0
fi

RM="rm -rfd"
if which trash
then
   RM=trash
fi

set +e
$RM linux-*_${KERNEL_RELEASE}-*_amd64.buildinfo
$RM linux-*_${KERNEL_RELEASE}-*_amd64.changes
$RM linux-headers-${KERNEL_RELEASE}_${KERNEL_RELEASE}-*_amd64.deb
$RM linux-image-${KERNEL_RELEASE}_${KERNEL_RELEASE}-*_amd64.deb
$RM linux-image-${KERNEL_RELEASE}-dbg_${KERNEL_RELEASE}-*_amd64.deb
$RM linux-libc-dev_${KERNEL_RELEASE}-*_amd64.deb
set -e

# Compress with xz even on Ubuntu to avoid
# https://github.com/yktoo/indicator-sound-switcher/issues/113
env - PATH=${PATH} KDEB_COMPRESS=xz \
	${MAKE} -C ${LINUX} ${TARGET}
ccache -s

TMP=$(mktemp -d --suffix -$USER-$(basename $0))/

ls -al > "${TMP}kernel.filenames"
mv linux-*_${KERNEL_RELEASE}-*_amd64.buildinfo "${TMP}linux_amd64.buildinfo"
mv linux-*_${KERNEL_RELEASE}-*_amd64.changes "${TMP}linux_amd64.changes"
mv linux-headers-${KERNEL_RELEASE}_${KERNEL_RELEASE}-*_amd64.deb "${TMP}linux-headers_amd64.deb"
mv linux-image-${KERNEL_RELEASE}_${KERNEL_RELEASE}-*_amd64.deb "${TMP}linux-image_amd64.deb"
set +e
mv linux-image-${KERNEL_RELEASE}-dbg_${KERNEL_RELEASE}-*_amd64.deb "${TMP}linux-image-dbg_amd64.deb"
set -e
mv linux-libc-dev_${KERNEL_RELEASE}-*_amd64.deb "${TMP}linux-libc-dev_amd64.deb"
echo ${KERNEL_RELEASE} > "${TMP}kernel.release"

rm -rfd "${DST}"
cp -rfd $TMP $cached
mv -f $TMP "$DST"
