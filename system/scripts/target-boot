#!/usr/bin/env bash
set -euo pipefail

set -x

. ./env.sh

release=undefined
cmdline=${GRUB_CMDLINE_LINUX:-}

usage() {
    echo "Usage: $0 -r KERNEL_RELEASE [-c CMDLINE]" >&2
    exit 1
}

while getopts "r:c:" opt; do
    case "${opt}" in
        r)
            release=${OPTARG}
            ;;
        c)
            cmdline=${OPTARG}
            ;;
        *)
            usage
            ;;
    esac
done
shift $((OPTIND-1))

# TODO: Refactor and remove these legacy aliases.
TARGET_SSH() {
    ./scripts/target-scpsh "$@"
}
TARGET_EXEC=./scripts/target-scpsh

booted_cmdline=$(${TARGET_SSH} cat /proc/cmdline)
booted_release=$(${TARGET_SSH} uname -r)
if [[ "${booted_release}" = "${release}" ]] && [[ "${booted_cmdline}" = *${cmdline}* ]]
then
    exit 0
fi
echo "Booting ${release} from ${booted_release}" >&2

${TARGET_SSH} sudo mv -n /etc/default/grub /etc/default/grub.$USER-backup || true
echo "# Generated by $0, previous contents have been moved to ./grub.$USER-backup
GRUB_DEFAULT=saved
GRUB_TIMEOUT=5
GRUB_DISTRIBUTOR='Debian'
GRUB_CMDLINE_LINUX_DEFAULT='panic=30'
GRUB_CMDLINE_LINUX='${cmdline}'" | ${TARGET_SSH} sudo tee /etc/default/grub
${TARGET_SSH} sudo update-grub

# Can also be "Ubuntu".
distro="Debian GNU/Linux"

${TARGET_EXEC} "sudo grub-set-default \"Advanced options for ${distro}>${distro}, with Linux \$(uname -r)\""
${TARGET_EXEC} "sudo grub-reboot \"Advanced options for ${distro}>${distro}, with Linux ${release}\""
${TARGET_EXEC} 'sudo reboot' || true

# Allow it to shut down.
sleep 10

new_release=$(AUTOSSH_POLL=5 AUTOSSH_GATETIME=0 autossh -p ${SSH_PORT} ${SSH_DEST} 'uname -r')
if [ "${new_release}" = "${release}" ]
then
    exit 0
else
    echo "Failed to boot ${release} on ${SSH_DEST}:${SSH_PORT}" >&2
    exit 1
fi
